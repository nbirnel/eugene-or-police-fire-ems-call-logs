#!/usr/bin/env python3

import csv
from time import sleep
from datetime import datetime, timedelta

from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.chrome.options import Options


def get_driver():
    options = webdriver.ChromeOptions()
    options.add_argument("--remote-debugging-pipe")
    options.add_argument("--headless=new")
    return webdriver.Chrome(options=options)

def write_warnings(date, message):
    with open("warnings.txt", 'a', encoding='utf8') as warnings:
        warnings.write(f"{date}: {message}\n")

def row_as_list_of_text(row):
    cells = row.find_elements(By.XPATH, ".//td")[1:]
    return [cell.text for cell in cells]

def get_rows(driver, start, end):
    epd_dispatch = "https://coeapps.eugene-or.gov/EPDDispatchLog/Search"
    driver.get(epd_dispatch)
    driver.implicitly_wait(0.5)
    date_from_box = driver.find_element(By.ID, "DateFrom")
    date_through_box = driver.find_element(By.ID, "DateThrough")
    submit_button = driver.find_element(By.XPATH, "//input[@type='submit']")

    date_from_box.send_keys(start)
    date_through_box.send_keys(end)
    sleep(1)
    submit_button.click()
    sleep(10)

    main_ = driver.find_element(By.ID, "main")
    if "Number of search results was reduced to 250" in main_.text:
        write_warnings(start, "results truncated to 250")
    table = driver.find_element(By.XPATH, "//table[@id='calls']")
    rows = table.find_elements(By.XPATH, ".//tr")
    return [ row_as_list_of_text(row) for row in rows ]


def write_file(rows, date):
    output = f"{date}.csv"
    header = [
        "call_time",
        "dispatch_time",
        "incident_desc",
        "disposition",
        "event_number",
        "location",
        "priority",
        "case",
    ]
    with open(output, "w", encoding='utf8') as csvfile:
        writer = csv.writer(csvfile)
        writer.writerow(header)
        writer.writerows(rows)


def main():
    a_day_less_a_minute = timedelta(days=1) - timedelta(minutes=1)
    day_format = "%Y%m%d"
    # 07/01/2013 05:01:34 PM
    web_format = "%m/%d/%Y %I:%M %p"

    driver = get_driver()

    current = datetime(2013, 11, 19)
    last = datetime.now()
    while current <= last:
        start = current.strftime(web_format)
        end = (current + a_day_less_a_minute).strftime(web_format)
        rows = get_rows(driver, start, end)
        write_file(rows, current.strftime(day_format))
        current = current + timedelta(days=1)
        sleep(3)

    driver.quit()

if __name__ == "__main__":
    main()
